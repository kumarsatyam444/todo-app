/* Enhanced animations and utilities with better performance */

/* Micro-interactions */
@keyframes heartbeat {
  0% { transform: scale(1); }
  14% { transform: scale(1.15); }
  28% { transform: scale(1); }
  42% { transform: scale(1.15); }
  70% { transform: scale(1); }
}

@keyframes wiggle {
  0%, 7% { transform: rotateZ(0); }
  15% { transform: rotateZ(-15deg); }
  20% { transform: rotateZ(10deg); }
  25% { transform: rotateZ(-10deg); }
  30% { transform: rotateZ(6deg); }
  35% { transform: rotateZ(-4deg); }
  40%, 100% { transform: rotateZ(0); }
}

@keyframes rubberBand {
  from { transform: scale3d(1, 1, 1); }
  30% { transform: scale3d(1.25, 0.75, 1); }
  40% { transform: scale3d(0.75, 1.25, 1); }
  50% { transform: scale3d(1.15, 0.85, 1); }
  65% { transform: scale3d(0.95, 1.05, 1); }
  75% { transform: scale3d(1.05, 0.95, 1); }
  to { transform: scale3d(1, 1, 1); }
}

@keyframes jello {
  from, 11.1%, to { transform: translate3d(0, 0, 0); }
  22.2% { transform: skewX(-12.5deg) skewY(-12.5deg); }
  33.3% { transform: skewX(6.25deg) skewY(6.25deg); }
  44.4% { transform: skewX(-3.125deg) skewY(-3.125deg); }
  55.5% { transform: skewX(1.5625deg) skewY(1.5625deg); }
  66.6% { transform: skewX(-0.78125deg) skewY(-0.78125deg); }
  77.7% { transform: skewX(0.390625deg) skewY(0.390625deg); }
  88.8% { transform: skewX(-0.1953125deg) skewY(-0.1953125deg); }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 40px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translate3d(0, -40px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
  50% {
    opacity: 1;
  }
}

@keyframes zoomOut {
  from {
    opacity: 1;
  }
  50% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
  to {
    opacity: 0;
  }
}

@keyframes rotateIn {
  from {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, -200deg);
    opacity: 0;
  }
  to {
    transform-origin: center;
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

@keyframes flipInX {
  from {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }
  40% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    animation-timing-function: ease-in;
  }
  60% {
    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    opacity: 1;
  }
  80% {
    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
  }
  to {
    transform: perspective(400px);
  }
}

/* Utility classes */
.animate-heartbeat { animation: heartbeat 1.5s ease-in-out infinite; }
.animate-wiggle { animation: wiggle 1s ease-in-out; }
.animate-rubber { animation: rubberBand 1s; }
.animate-jello { animation: jello 1s; }
.animate-fadeInUp { animation: fadeInUp 0.6s ease-out; }
.animate-fadeInDown { animation: fadeInDown 0.6s ease-out; }
.animate-slideInLeft { animation: slideInLeft 0.6s ease-out; }
.animate-slideInRight { animation: slideInRight 0.6s ease-out; }
.animate-zoomIn { animation: zoomIn 0.6s; }
.animate-zoomOut { animation: zoomOut 0.6s; }
.animate-rotateIn { animation: rotateIn 0.6s; }
.animate-flipInX { animation: flipInX 0.75s; }

/* Enhanced hover effects */
.hover-lift {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
              box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-8px);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}

.hover-glow {
  transition: box-shadow 0.3s ease, filter 0.3s ease;
}

.hover-glow:hover {
  box-shadow: 0 0 30px rgba(102, 126, 234, 0.6);
  filter: brightness(1.1);
}

.hover-rotate {
  transition: transform 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.hover-rotate:hover {
  transform: rotate(8deg);
}

.hover-scale {
  transition: transform 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.hover-scale:hover {
  transform: scale(1.08);
}

.hover-tilt {
  transition: transform 0.3s ease;
}

.hover-tilt:hover {
  transform: perspective(1000px) rotateX(10deg) rotateY(10deg);
}

.hover-bounce {
  transition: transform 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.hover-bounce:hover {
  transform: translateY(-5px);
  animation: bounce 0.6s ease-in-out;
}

/* Loading animations */
@keyframes spin {
  to { transform: rotate(360deg); }
}

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes pulse-ring {
  0% {
    transform: scale(0.33);
  }
  40%, 50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: scale(1.2);
  }
}

@keyframes dots {
  0%, 20% {
    color: rgba(0,0,0,0);
    text-shadow:
      .25em 0 0 rgba(0,0,0,0),
      .5em 0 0 rgba(0,0,0,0);
  }
  40% {
    color: currentColor;
    text-shadow:
      .25em 0 0 rgba(0,0,0,0),
      .5em 0 0 rgba(0,0,0,0);
  }
  60% {
    text-shadow:
      .25em 0 0 currentColor,
      .5em 0 0 rgba(0,0,0,0);
  }
  80%, 100% {
    text-shadow:
      .25em 0 0 currentColor,
      .5em 0 0 currentColor;
  }
}

.animate-spin { animation: spin 1s linear infinite; }
.animate-ping { animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite; }
.animate-pulse-ring { animation: pulse-ring 1.5s ease-out infinite; }
.animate-dots { animation: dots 1.5s steps(5, end) infinite; }

/* Text effects */
@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink {
  from, to { border-color: transparent; }
  50% { border-color: currentColor; }
}

@keyframes textGlow {
  0%, 100% {
    text-shadow: 0 0 5px currentColor, 0 0 10px currentColor;
  }
  50% {
    text-shadow: 0 0 20px currentColor, 0 0 30px currentColor;
  }
}

.typewriter {
  overflow: hidden;
  border-right: 2px solid;
  white-space: nowrap;
  animation: typewriter 2s steps(40) 1s 1 normal both, blink 1s steps(40) infinite normal;
}

.text-glow {
  animation: textGlow 2s ease-in-out infinite alternate;
}

/* Enhanced gradient text animations */
@keyframes gradient-shift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

@keyframes rainbow {
  0% { filter: hue-rotate(0deg); }
  100% { filter: hue-rotate(360deg); }
}

.gradient-text {
  background: linear-gradient(-45deg, #667eea, #764ba2, #f093fb, #f5576c, #4facfe, #00f2fe);
  background-size: 400% 400%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  animation: gradient-shift 4s ease infinite;
}

.rainbow-text {
  animation: rainbow 3s linear infinite;
}

/* Morphing shapes */
@keyframes morph {
  0%, 100% { border-radius: 40% 60% 70% 30% / 40% 40% 60% 50%; }
  34% { border-radius: 70% 30% 50% 50% / 30% 30% 70% 70%; }
  67% { border-radius: 100% 60% 60% 100% / 100% 100% 60% 60%; }
}

@keyframes blob {
  0% { transform: translate(0px, 0px) scale(1); }
  33% { transform: translate(30px, -50px) scale(1.1); }
  66% { transform: translate(-20px, 20px) scale(0.9); }
  100% { transform: translate(0px, 0px) scale(1); }
}

.morphing-shape {
  animation: morph 8s ease-in-out infinite;
}

.blob-shape {
  animation: blob 7s ease-in-out infinite;
}

/* Enhanced particle effects */
@keyframes particle-float-1 {
  0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 1; }
  50% { transform: translateY(-100px) rotate(180deg); opacity: 0.5; }
}

@keyframes particle-float-2 {
  0%, 100% { transform: translateX(0px) rotate(0deg); opacity: 0.7; }
  50% { transform: translateX(100px) rotate(-180deg); opacity: 1; }
}

@keyframes particle-float-3 {
  0%, 100% { transform: translate(0px, 0px) rotate(0deg); opacity: 0.8; }
  33% { transform: translate(30px, -30px) rotate(120deg); opacity: 0.4; }
  66% { transform: translate(-20px, 20px) rotate(240deg); opacity: 1; }
}

@keyframes sparkle {
  0%, 100% { opacity: 0; transform: scale(0); }
  50% { opacity: 1; transform: scale(1); }
}

.particle-1 { animation: particle-float-1 6s ease-in-out infinite; }
.particle-2 { animation: particle-float-2 8s ease-in-out infinite; }
.particle-3 { animation: particle-float-3 10s ease-in-out infinite; }
.sparkle { animation: sparkle 1.5s ease-in-out infinite; }

/* Advanced transitions */
.transition-all { transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); }
.transition-smooth { transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94); }
.transition-bounce { transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55); }
.transition-elastic { transition: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55); }

/* Enhanced glass morphism utilities */
.glass-light {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
}

.glass-medium {
  background: rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
}

.glass-strong {
  background: rgba(255, 255, 255, 0.25);
  backdrop-filter: blur(30px);
  -webkit-backdrop-filter: blur(30px);
  border: 1px solid rgba(255, 255, 255, 0.4);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
}

.glass-dark {
  background: rgba(0, 0, 0, 0.2);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
}

/* Enhanced neon effects */
.neon-blue {
  color: #667eea;
  text-shadow: 
    0 0 5px #667eea,
    0 0 10px #667eea,
    0 0 15px #667eea,
    0 0 20px #667eea,
    0 0 35px #667eea,
    0 0 40px #667eea;
}

.neon-pink {
  color: #f093fb;
  text-shadow: 
    0 0 5px #f093fb,
    0 0 10px #f093fb,
    0 0 15px #f093fb,
    0 0 20px #f093fb,
    0 0 35px #f093fb,
    0 0 40px #f093fb;
}

.neon-green {
  color: #00f2fe;
  text-shadow: 
    0 0 5px #00f2fe,
    0 0 10px #00f2fe,
    0 0 15px #00f2fe,
    0 0 20px #00f2fe,
    0 0 35px #00f2fe,
    0 0 40px #00f2fe;
}

.neon-border {
  border: 2px solid currentColor;
  box-shadow: 
    0 0 5px currentColor,
    0 0 10px currentColor,
    0 0 15px currentColor,
    inset 0 0 5px currentColor;
}

.neon-border {
  border: 2px solid currentColor;
  box-shadow: 
    0 0 5px currentColor,
    0 0 10px currentColor,
    0 0 15px currentColor,
    inset 0 0 5px currentColor;
}

.neon-box {
  box-shadow: 
    0 0 5px currentColor,
    0 0 10px currentColor,
    0 0 15px currentColor,
    0 0 20px currentColor,
    inset 0 0 5px currentColor;
}

/* Enhanced 3D effects */
.shadow-3d {
  box-shadow: 
    0 1px 0 #ccc,
    0 2px 0 #c9c9c9,
    0 3px 0 #bbb,
    0 4px 0 #b9b9b9,
    0 5px 0 #aaa,
    0 6px 1px rgba(0,0,0,.1),
    0 0 5px rgba(0,0,0,.1),
    0 1px 3px rgba(0,0,0,.3),
    0 3px 5px rgba(0,0,0,.2),
    0 5px 10px rgba(0,0,0,.25);
}

.text-3d {
  text-shadow: 
    0 1px 0 #ccc,
    0 2px 0 #c9c9c9,
    0 3px 0 #bbb,
    0 4px 0 #b9b9b9,
    0 5px 0 #aaa,
    0 6px 1px rgba(0,0,0,.1),
    0 0 5px rgba(0,0,0,.1),
    0 1px 3px rgba(0,0,0,.3),
    0 3px 5px rgba(0,0,0,.2),
    0 5px 10px rgba(0,0,0,.25);
}

.perspective-3d {
  transform-style: preserve-3d;
  perspective: 1000px;
}

.rotate-3d-x {
  transform: rotateX(45deg);
}

.rotate-3d-y {
  transform: rotateY(45deg);
}

.rotate-3d-z {
  transform: rotateZ(45deg);
}

/* Button effects */
@keyframes buttonPress {
  0% { transform: scale(1); }
  50% { transform: scale(0.95); }
  100% { transform: scale(1); }
}

@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}

.button-press {
  animation: buttonPress 0.2s ease-in-out;
}

.ripple-effect {
  position: relative;
  overflow: hidden;
}

.ripple-effect::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.5);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.ripple-effect:active::before {
  width: 300px;
  height: 300px;
}

/* Card effects */
@keyframes cardFlip {
  0% { transform: rotateY(0); }
  50% { transform: rotateY(-90deg); }
  100% { transform: rotateY(0); }
}

@keyframes cardSlide {
  0% { transform: translateX(-100%); opacity: 0; }
  100% { transform: translateX(0); opacity: 1; }
}

.card-flip {
  animation: cardFlip 0.8s ease-in-out;
}

.card-slide {
  animation: cardSlide 0.6s ease-out;
}

/* Stagger animations */
.stagger-1 { animation-delay: 0.1s; }
.stagger-2 { animation-delay: 0.2s; }
.stagger-3 { animation-delay: 0.3s; }
.stagger-4 { animation-delay: 0.4s; }
.stagger-5 { animation-delay: 0.5s; }
.stagger-6 { animation-delay: 0.6s; }

/* Scroll animations */
@keyframes slideInFromBottom {
  0% {
    opacity: 0;
    transform: translateY(50px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInFromTop {
  0% {
    opacity: 0;
    transform: translateY(-50px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInFromLeft {
  0% {
    opacity: 0;
    transform: translateX(-50px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInFromRight {
  0% {
    opacity: 0;
    transform: translateX(50px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.scroll-animate {
  opacity: 0;
  animation: slideInFromBottom 0.6s ease-out forwards;
}

.scroll-animate.from-top {
  animation: slideInFromTop 0.6s ease-out forwards;
}

.scroll-animate.from-left {
  animation: slideInFromLeft 0.6s ease-out forwards;
}

.scroll-animate.from-right {
  animation: slideInFromRight 0.6s ease-out forwards;
}

/* Performance optimizations */
.will-change-transform {
  will-change: transform;
}

.will-change-opacity {
  will-change: opacity;
}

.will-change-auto {
  will-change: auto;
}

.gpu-accelerated {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Responsive utilities */
@media (max-width: 768px) {
  .animate-heartbeat,
  .animate-wiggle,
  .animate-rubber,
  .animate-jello,
  .animate-fadeInUp,
  .animate-fadeInDown,
  .animate-slideInLeft,
  .animate-slideInRight,
  .animate-zoomIn,
  .animate-zoomOut,
  .animate-rotateIn,
  .animate-flipInX {
    animation-duration: 0.3s;
  }
  
  .hover-lift:hover,
  .hover-glow:hover,
  .hover-rotate:hover,
  .hover-scale:hover,
  .hover-tilt:hover,
  .hover-bounce:hover {
    transform: none;
    box-shadow: none;
    filter: none;
  }
  
  .neon-blue,
  .neon-pink,
  .neon-green {
    text-shadow: none;
  }
  
  .neon-border,
  .neon-box {
    box-shadow: none;
    border: 1px solid currentColor;
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  .animate-heartbeat,
  .animate-wiggle,
  .animate-rubber,
  .animate-jello,
  .animate-fadeInUp,
  .animate-fadeInDown,
  .animate-slideInLeft,
  .animate-slideInRight,
  .animate-zoomIn,
  .animate-zoomOut,
  .animate-rotateIn,
  .animate-flipInX,
  .animate-spin,
  .animate-ping,
  .animate-pulse-ring,
  .animate-dots,
  .typewriter,
  .text-glow,
  .gradient-text,
  .rainbow-text,
  .morphing-shape,
  .blob-shape,
  .particle-1,
  .particle-2,
  .particle-3,
  .sparkle,
  .button-press,
  .card-flip,
  .card-slide,
  .scroll-animate {
    animation: none;
  }
  
  .transition-all,
  .transition-smooth,
  .transition-bounce,
  .transition-elastic {
    transition: none;
  }
  
  .hover-lift,
  .hover-glow,
  .hover-rotate,
  .hover-scale,
  .hover-tilt,
  .hover-bounce {
    transition: none;
  }
  
  .ripple-effect::before {
    display: none;
  }
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .glass-light,
  .glass-medium,
  .glass-strong,
  .glass-dark {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: none;
    border: 2px solid currentColor;
  }
  
  .neon-blue,
  .neon-pink,
  .neon-green {
    color: currentColor;
    text-shadow: none;
  }
  
  .shadow-3d {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
  }
  
  .text-3d {
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  }
}

/* Dark mode adjustments */
@media (prefers-color-scheme: dark) {
  .glass-light {
    background: rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .glass-medium {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }
  
  .glass-strong {
    background: rgba(0, 0, 0, 0.4);
    border: 1px solid rgba(255, 255, 255, 0.3);
  }
  
  .shadow-3d {
    box-shadow: 
      0 1px 0 #333,
      0 2px 0 #2a2a2a,
      0 3px 0 #222,
      0 4px 0 #1a1a1a,
      0 5px 0 #111,
      0 6px 1px rgba(0,0,0,.3),
      0 0 5px rgba(0,0,0,.3),
      0 1px 3px rgba(0,0,0,.5),
      0 3px 5px rgba(0,0,0,.4),
      0 5px 10px rgba(0,0,0,.5);
  }
  
  .text-3d {
    text-shadow: 
      0 1px 0 #333,
      0 2px 0 #2a2a2a,
      0 3px 0 #222,
      0 4px 0 #1a1a1a,
      0 5px 0 #111,
      0 6px 1px rgba(0,0,0,.3),
      0 0 5px rgba(0,0,0,.3),
      0 1px 3px rgba(0,0,0,.5),
      0 3px 5px rgba(0,0,0,.4),
      0 5px 10px rgba(0,0,0,.5);
  }
}

/* Print styles */
@media print {
  * {
    animation: none !important;
    transition: none !important;
    box-shadow: none !important;
    text-shadow: none !important;
    backdrop-filter: none !important;
    filter: none !important;
  }
  
  .glass-light,
  .glass-medium,
  .glass-strong,
  .glass-dark {
    background: transparent !important;
    border: 1px solid #ccc !important;
  }
}

/* Container queries (future-proofing) */
@container (max-width: 600px) {
  .animate-heartbeat,
  .animate-wiggle,
  .animate-rubber,
  .animate-jello {
    animation-duration: 0.5s;
  }
}

/* Touch device optimizations */
@media (hover: none) and (pointer: coarse) {
  .hover-lift,
  .hover-glow,
  .hover-rotate,
  .hover-scale,
  .hover-tilt,
  .hover-bounce {
    transition: none;
  }
  
  .hover-lift:active,
  .hover-scale:active {
    transform: scale(0.95);
  }
  
  .ripple-effect:active::before {
    animation: ripple 0.6s linear;
  }
}

/* Utility classes for common combinations */
.fade-slide-up {
  animation: fadeInUp 0.6s ease-out;
}

.fade-slide-down {
  animation: fadeInDown 0.6s ease-out;
}

.zoom-fade {
  animation: zoomIn 0.6s ease-out;
}

.rotate-fade {
  animation: rotateIn 0.6s ease-out;
}

.elastic-bounce {
  transition: transform 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.elastic-bounce:hover {
  transform: scale(1.1);
}

.smooth-glow {
  transition: box-shadow 0.3s ease, filter 0.3s ease;
}

.smooth-glow:hover {
  box-shadow: 0 0 20px rgba(102, 126, 234, 0.4);
  filter: brightness(1.05);
}

/* Animation delays for sequential effects */
.delay-100 { animation-delay: 0.1s; }
.delay-200 { animation-delay: 0.2s; }
.delay-300 { animation-delay: 0.3s; }
.delay-500 { animation-delay: 0.5s; }
.delay-700 { animation-delay: 0.7s; }
.delay-1000 { animation-delay: 1s; }

/* Duration utilities */
.duration-150 { animation-duration: 0.15s; }
.duration-300 { animation-duration: 0.3s; }
.duration-500 { animation-duration: 0.5s; }
.duration-700 { animation-duration: 0.7s; }
.duration-1000 { animation-duration: 1s; }

/* Easing utilities */
.ease-linear { animation-timing-function: linear; }
.ease-in { animation-timing-function: ease-in; }
.ease-out { animation-timing-function: ease-out; }
.ease-in-out { animation-timing-function: ease-in-out; }
.ease-bounce { animation-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55); }
.ease-elastic { animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94); }

/* Fill mode utilities */
.fill-none { animation-fill-mode: none; }
.fill-forwards { animation-fill-mode: forwards; }
.fill-backwards { animation-fill-mode: backwards; }
.fill-both { animation-fill-mode: both; }

/* Iteration utilities */
.iterate-infinite { animation-iteration-count: infinite; }
.iterate-1 { animation-iteration-count: 1; }
.iterate-2 { animation-iteration-count: 2; }
.iterate-3 { animation-iteration-count: 3; }

/* Direction utilities */
.direction-normal { animation-direction: normal; }
.direction-reverse { animation-direction: reverse; }
.direction-alternate { animation-direction: alternate; }
.direction-alternate-reverse { animation-direction: alternate-reverse; }

/* Play state utilities */
.play-paused { animation-play-state: paused; }
.play-running { animation-play-state: running; }
